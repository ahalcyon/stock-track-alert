name: CI/CD

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug OIDC Token Sub Claim
        uses: actions/github-script@v6
        id: get-token-sub
        with:
          script: |
            const token = await core.getIDToken();
            const payload = JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString());
            console.log(`OIDC Token Payload: ${JSON.stringify(payload, null, 2)}`);
            console.log(`OIDC Token Sub Claim: ${payload.sub}`);
            core.setOutput('sub_claim', payload.sub);

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::769813884566:role/github-actions-role-stock-track-alert # 作成したIAMロールのARN
          aws-region: ap-northeast-1

      - name: Debug OIDC Token
        run: |
          echo "OIDC_TOKEN_REQUEST_URL: ${{ steps.aws-creds.outputs.id-token-request-url }}"
          echo "OIDC_TOKEN_REQUEST_TOKEN: ${{ steps.aws-creds.outputs.id-token-request-token }}"
          # OIDCトークンのペイロードをデコードして表示
          echo "OIDC_TOKEN_PAYLOAD: $(echo ${{ steps.aws-creds.outputs.id-token-request-token }} | cut -d. -f2 | base64 -d)"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push poller image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: poller
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/poller.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push notifier image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: notifier
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/notifier.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::769813884566:role/github-actions-role-stock-track-alert # 作成したIAMロールのARN
          aws-region: ap-northeast-1

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra/envs/dev

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra/envs/dev

